初始化版本库时会发生什么情况？为什么你需要这样做？

	初始化的话，会创建一个.git文件，但不会产生初始的commit。

暂存区与工作目录和版本库有何不同？你认为它具有什么价值？
	
	工作目录包含的是所有的文件，不区分是否需要进行git操作。而版本库内包含的是所有
	需要跟踪的文件。而暂存区就是两者之间的桥梁，顾名思义，起到了暂存的作用，可以让
	我们自行确定什么文件需要跟踪，什么文件不需要。

如何使用暂存区确保为每项逻辑更改进行一次提交？

	暂存区内暂存的更改后的文件，使用git diff --staged命令，查看与之前最新提交的
	commit之间的区别。查看是否是单项逻辑提交。提交的时候，也要写好这次提交的描述

在哪些情况下，分支可以帮助你有序的组织历史记录？分支将如何提供帮助？
	
	尝试一种新的实验性功能，并且不确定该功能是否可行，但是依然想要一个可行的演示。
	想尝试一些东西，不过不想对原有的commit造成影响。
	分支可以创建类似一个副本一样的东西，可以随便在上面更改。

图表如何帮助你直观地显示分支结构？

	将每个commit当做节点，那么可以画出repository整个历史的结构，可以清晰的看到
	在哪些节点上产生了分支（branch）

将两个分支合并到一起有何结果？为什么我们在图表中表示它的方式是那样的？

	合并到一起，创建一个新的commit。
	因为使用了两个顶点共同创建了新的commit。

Git的自动合并与始终手动进行合并各有何优缺点？

	自动合并，方便、快捷，迅速，不过有时候会有合并冲突
	手动合并，可以清楚的知道哪些代码需要保留，不过慢，效率低